//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MESReport.ServiceReference1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ElistQuerySoap")]
    public interface ElistQuerySoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_ChangeData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID_ChangeData(string EmployeeID, string DepartmentID, string ChangeDate, string CompanyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_ChangeData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_ChangeDataAsync(string EmployeeID, string DepartmentID, string ChangeDate, string CompanyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_ExtData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID_ExtData(string EmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_ExtData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_ExtDataAsync(string EmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_InfoData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID_InfoData(string EmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_InfoData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_InfoDataAsync(string EmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID(string EmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserIDAsync(string EmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UsersSearch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UsersSearch(string Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UsersSearch", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> UsersSearchAsync(string Key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserName(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserName", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserNameAsync(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByAgent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByAgent(string Agent_OU, string Agent_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByAgent", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByAgentAsync(string Agent_OU, string Agent_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByAgent4Site", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByAgent4Site(string Agent_OU, string Agent_ID, string Site);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByAgent4Site", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByAgent4SiteAsync(string Agent_OU, string Agent_ID, string Site);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ExploreEmployee", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ExploreEmployee(string CompanyCode, string OU_CODE, int Level);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ExploreEmployee", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ExploreEmployeeAsync(string CompanyCode, string OU_CODE, int Level);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByDepartment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByDepartment(string DepartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByDepartment", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByDepartmentAsync(string DepartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByNotesID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByNotesID(string NotesID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByNotesID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByNotesIDAsync(string NotesID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_Govern", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID_Govern(string EmployeeID, string CompanyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_Govern", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_GovernAsync(string EmployeeID, string CompanyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_Inferior", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID_Inferior(string EmployeeID, string CompanyCode, string OU_CODE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_Inferior", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_InferiorAsync(string EmployeeID, string CompanyCode, string OU_CODE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_Manager", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID_Manager(string EmployeeID, string Level, string Trace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_Manager", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_ManagerAsync(string EmployeeID, string Level, string Trace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByOUCode_Assistant", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByOUCode_Assistant(string CompanyCode, string OUCode, string Level);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByOUCode_Assistant", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByOUCode_AssistantAsync(string CompanyCode, string OUCode, string Level);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByOUCode_Manager", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByOUCode_Manager(string CompanyCode, string OUCode, string Level);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByOUCode_Manager", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByOUCode_ManagerAsync(string CompanyCode, string OUCode, string Level);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByAssistantID_OU", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByAssistantID_OU(string AssistantID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByAssistantID_OU", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByAssistantID_OUAsync(string AssistantID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByManagerID_OU", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByManagerID_OU(string ManagerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByManagerID_OU", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByManagerID_OUAsync(string ManagerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_FindSuperManager_byAbnormal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID_FindSuperManager_byAbnormal(string UserID, string SystemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_FindSuperManager_byAbnormal", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_FindSuperManager_byAbnormalAsync(string UserID, string SystemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_FindAgentSite", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ByUserID_FindAgentSite(string UserID, string Site);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_FindAgentSite", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ByUserID_FindAgentSiteAsync(string UserID, string Site);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_FindWorkflowAgent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID_FindWorkflowAgent(string UserID, string FindDepartment, string Site);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_FindWorkflowAgent", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_FindWorkflowAgentAsync(string UserID, string FindDepartment, string Site);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_FindAgent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID_FindAgent(string UserID, string FindDepartment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_FindAgent", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_FindAgentAsync(string UserID, string FindDepartment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_Agent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID_Agent(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_Agent", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_AgentAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_DirectInferior", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID_DirectInferior(string EmployeeID, string CompanyCode, string OU_CODE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_DirectInferior", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_DirectInferiorAsync(string EmployeeID, string CompanyCode, string OU_CODE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_Abnormal_Manager", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID_Abnormal_Manager(string EmployeeID, string Level, string JobTitle, string UpStep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_Abnormal_Manager", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_Abnormal_ManagerAsync(string EmployeeID, string Level, string JobTitle, string UpStep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_Abnormal_Manager_New", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID_Abnormal_Manager_New(string EmployeeID, string Level, string JobTitle, string UpStep, string JobStep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_Abnormal_Manager_New", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_Abnormal_Manager_NewAsync(string EmployeeID, string Level, string JobTitle, string UpStep, string JobStep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_Abnormal_Manager_SignerLevel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID_Abnormal_Manager_SignerLevel(string EmployeeID, string Level, string UpStep, string JobStep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_Abnormal_Manager_SignerLevel", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_Abnormal_Manager_SignerLevelAsync(string EmployeeID, string Level, string UpStep, string JobStep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_Abnormal_Manager_New1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID_Abnormal_Manager_New1(string EmployeeID, string Level, string JobTitle, string UpStep, string JobStep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_Abnormal_Manager_New1", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_Abnormal_Manager_New1Async(string EmployeeID, string Level, string JobTitle, string UpStep, string JobStep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_SiteManager", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID_SiteManager(string EmployeeID, string Level, string Trace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_SiteManager", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_SiteManagerAsync(string EmployeeID, string Level, string Trace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_Site_Manager", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID_Site_Manager(string EmployeeID, string Level, string JobTitle, string UpStep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_Site_Manager", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_Site_ManagerAsync(string EmployeeID, string Level, string JobTitle, string UpStep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_Site_Manager_New", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID_Site_Manager_New(string EmployeeID, string Level, string JobTitle, string UpStep, string JobStep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_Site_Manager_New", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_Site_Manager_NewAsync(string EmployeeID, string Level, string JobTitle, string UpStep, string JobStep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_SiteGovern", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID_SiteGovern(string EmployeeID, string CompanyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_SiteGovern", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_SiteGovernAsync(string EmployeeID, string CompanyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_SiteInferior", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID_SiteInferior(string EmployeeID, string CompanyCode, string OU_CODE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_SiteInferior", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_SiteInferiorAsync(string EmployeeID, string CompanyCode, string OU_CODE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_SiteDirectInferior", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID_SiteDirectInferior(string EmployeeID, string CompanyCode, string OU_CODE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_SiteDirectInferior", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_SiteDirectInferiorAsync(string EmployeeID, string CompanyCode, string OU_CODE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_FindSuperManager_bySite", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ByUserID_FindSuperManager_bySite(string UserID, string SystemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ByUserID_FindSuperManager_bySite", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_FindSuperManager_bySiteAsync(string UserID, string SystemName);
        
        // CODEGEN: 訊息 UsersSearch_New1 的包裝函式名稱 (UsersSearch_New1) 與預設值 (UsersSearch_New) 不符，正在產生訊息合約
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UsersSearch_New1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESReport.ServiceReference1.UsersSearch_New11 UsersSearch_New(MESReport.ServiceReference1.UsersSearch_New1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UsersSearch_New1", ReplyAction="*")]
        System.Threading.Tasks.Task<MESReport.ServiceReference1.UsersSearch_New11> UsersSearch_NewAsync(MESReport.ServiceReference1.UsersSearch_New1 request);
        
        // CODEGEN: 訊息 UsersSearch_New2 的包裝函式名稱 (UsersSearch_New2) 與預設值 (UsersSearch_New1) 不符，正在產生訊息合約
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UsersSearch_New2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESReport.ServiceReference1.UsersSearch_New21 UsersSearch_New1(MESReport.ServiceReference1.UsersSearch_New2 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UsersSearch_New2", ReplyAction="*")]
        System.Threading.Tasks.Task<MESReport.ServiceReference1.UsersSearch_New21> UsersSearch_New1Async(MESReport.ServiceReference1.UsersSearch_New2 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WriteLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string WriteLog(string logDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WriteLog", ReplyAction="*")]
        System.Threading.Tasks.Task<string> WriteLogAsync(string logDescription);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UsersSearch_New1", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UsersSearch_New1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Key;
        
        public UsersSearch_New1() {
        }
        
        public UsersSearch_New1(string Key) {
            this.Key = Key;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UsersSearch_New1Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UsersSearch_New11 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataSet UsersSearch_New1Result;
        
        public UsersSearch_New11() {
        }
        
        public UsersSearch_New11(System.Data.DataSet UsersSearch_New1Result) {
            this.UsersSearch_New1Result = UsersSearch_New1Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UsersSearch_New2", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UsersSearch_New2 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Key;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Limit_OU_Code;
        
        public UsersSearch_New2() {
        }
        
        public UsersSearch_New2(string Key, string Limit_OU_Code) {
            this.Key = Key;
            this.Limit_OU_Code = Limit_OU_Code;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UsersSearch_New2Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UsersSearch_New21 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataSet UsersSearch_New2Result;
        
        public UsersSearch_New21() {
        }
        
        public UsersSearch_New21(System.Data.DataSet UsersSearch_New2Result) {
            this.UsersSearch_New2Result = UsersSearch_New2Result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ElistQuerySoapChannel : MESReport.ServiceReference1.ElistQuerySoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ElistQuerySoapClient : System.ServiceModel.ClientBase<MESReport.ServiceReference1.ElistQuerySoap>, MESReport.ServiceReference1.ElistQuerySoap {
        
        public ElistQuerySoapClient() {
        }
        
        public ElistQuerySoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ElistQuerySoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ElistQuerySoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ElistQuerySoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet ByUserID_ChangeData(string EmployeeID, string DepartmentID, string ChangeDate, string CompanyCode) {
            return base.Channel.ByUserID_ChangeData(EmployeeID, DepartmentID, ChangeDate, CompanyCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_ChangeDataAsync(string EmployeeID, string DepartmentID, string ChangeDate, string CompanyCode) {
            return base.Channel.ByUserID_ChangeDataAsync(EmployeeID, DepartmentID, ChangeDate, CompanyCode);
        }
        
        public System.Data.DataSet ByUserID_ExtData(string EmployeeID) {
            return base.Channel.ByUserID_ExtData(EmployeeID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_ExtDataAsync(string EmployeeID) {
            return base.Channel.ByUserID_ExtDataAsync(EmployeeID);
        }
        
        public System.Data.DataSet ByUserID_InfoData(string EmployeeID) {
            return base.Channel.ByUserID_InfoData(EmployeeID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_InfoDataAsync(string EmployeeID) {
            return base.Channel.ByUserID_InfoDataAsync(EmployeeID);
        }
        
        public System.Data.DataSet ByUserID(string EmployeeID) {
            return base.Channel.ByUserID(EmployeeID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserIDAsync(string EmployeeID) {
            return base.Channel.ByUserIDAsync(EmployeeID);
        }
        
        public System.Data.DataSet UsersSearch(string Key) {
            return base.Channel.UsersSearch(Key);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> UsersSearchAsync(string Key) {
            return base.Channel.UsersSearchAsync(Key);
        }
        
        public System.Data.DataSet ByUserName(string UserName) {
            return base.Channel.ByUserName(UserName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserNameAsync(string UserName) {
            return base.Channel.ByUserNameAsync(UserName);
        }
        
        public System.Data.DataSet ByAgent(string Agent_OU, string Agent_ID) {
            return base.Channel.ByAgent(Agent_OU, Agent_ID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByAgentAsync(string Agent_OU, string Agent_ID) {
            return base.Channel.ByAgentAsync(Agent_OU, Agent_ID);
        }
        
        public System.Data.DataSet ByAgent4Site(string Agent_OU, string Agent_ID, string Site) {
            return base.Channel.ByAgent4Site(Agent_OU, Agent_ID, Site);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByAgent4SiteAsync(string Agent_OU, string Agent_ID, string Site) {
            return base.Channel.ByAgent4SiteAsync(Agent_OU, Agent_ID, Site);
        }
        
        public System.Data.DataSet ExploreEmployee(string CompanyCode, string OU_CODE, int Level) {
            return base.Channel.ExploreEmployee(CompanyCode, OU_CODE, Level);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ExploreEmployeeAsync(string CompanyCode, string OU_CODE, int Level) {
            return base.Channel.ExploreEmployeeAsync(CompanyCode, OU_CODE, Level);
        }
        
        public System.Data.DataSet ByDepartment(string DepartID) {
            return base.Channel.ByDepartment(DepartID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByDepartmentAsync(string DepartID) {
            return base.Channel.ByDepartmentAsync(DepartID);
        }
        
        public System.Data.DataSet ByNotesID(string NotesID) {
            return base.Channel.ByNotesID(NotesID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByNotesIDAsync(string NotesID) {
            return base.Channel.ByNotesIDAsync(NotesID);
        }
        
        public System.Data.DataSet ByUserID_Govern(string EmployeeID, string CompanyCode) {
            return base.Channel.ByUserID_Govern(EmployeeID, CompanyCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_GovernAsync(string EmployeeID, string CompanyCode) {
            return base.Channel.ByUserID_GovernAsync(EmployeeID, CompanyCode);
        }
        
        public System.Data.DataSet ByUserID_Inferior(string EmployeeID, string CompanyCode, string OU_CODE) {
            return base.Channel.ByUserID_Inferior(EmployeeID, CompanyCode, OU_CODE);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_InferiorAsync(string EmployeeID, string CompanyCode, string OU_CODE) {
            return base.Channel.ByUserID_InferiorAsync(EmployeeID, CompanyCode, OU_CODE);
        }
        
        public System.Data.DataSet ByUserID_Manager(string EmployeeID, string Level, string Trace) {
            return base.Channel.ByUserID_Manager(EmployeeID, Level, Trace);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_ManagerAsync(string EmployeeID, string Level, string Trace) {
            return base.Channel.ByUserID_ManagerAsync(EmployeeID, Level, Trace);
        }
        
        public System.Data.DataSet ByOUCode_Assistant(string CompanyCode, string OUCode, string Level) {
            return base.Channel.ByOUCode_Assistant(CompanyCode, OUCode, Level);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByOUCode_AssistantAsync(string CompanyCode, string OUCode, string Level) {
            return base.Channel.ByOUCode_AssistantAsync(CompanyCode, OUCode, Level);
        }
        
        public System.Data.DataSet ByOUCode_Manager(string CompanyCode, string OUCode, string Level) {
            return base.Channel.ByOUCode_Manager(CompanyCode, OUCode, Level);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByOUCode_ManagerAsync(string CompanyCode, string OUCode, string Level) {
            return base.Channel.ByOUCode_ManagerAsync(CompanyCode, OUCode, Level);
        }
        
        public System.Data.DataSet ByAssistantID_OU(string AssistantID) {
            return base.Channel.ByAssistantID_OU(AssistantID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByAssistantID_OUAsync(string AssistantID) {
            return base.Channel.ByAssistantID_OUAsync(AssistantID);
        }
        
        public System.Data.DataSet ByManagerID_OU(string ManagerID) {
            return base.Channel.ByManagerID_OU(ManagerID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByManagerID_OUAsync(string ManagerID) {
            return base.Channel.ByManagerID_OUAsync(ManagerID);
        }
        
        public System.Data.DataSet ByUserID_FindSuperManager_byAbnormal(string UserID, string SystemName) {
            return base.Channel.ByUserID_FindSuperManager_byAbnormal(UserID, SystemName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_FindSuperManager_byAbnormalAsync(string UserID, string SystemName) {
            return base.Channel.ByUserID_FindSuperManager_byAbnormalAsync(UserID, SystemName);
        }
        
        public bool ByUserID_FindAgentSite(string UserID, string Site) {
            return base.Channel.ByUserID_FindAgentSite(UserID, Site);
        }
        
        public System.Threading.Tasks.Task<bool> ByUserID_FindAgentSiteAsync(string UserID, string Site) {
            return base.Channel.ByUserID_FindAgentSiteAsync(UserID, Site);
        }
        
        public System.Data.DataSet ByUserID_FindWorkflowAgent(string UserID, string FindDepartment, string Site) {
            return base.Channel.ByUserID_FindWorkflowAgent(UserID, FindDepartment, Site);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_FindWorkflowAgentAsync(string UserID, string FindDepartment, string Site) {
            return base.Channel.ByUserID_FindWorkflowAgentAsync(UserID, FindDepartment, Site);
        }
        
        public System.Data.DataSet ByUserID_FindAgent(string UserID, string FindDepartment) {
            return base.Channel.ByUserID_FindAgent(UserID, FindDepartment);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_FindAgentAsync(string UserID, string FindDepartment) {
            return base.Channel.ByUserID_FindAgentAsync(UserID, FindDepartment);
        }
        
        public System.Data.DataSet ByUserID_Agent(string UserID) {
            return base.Channel.ByUserID_Agent(UserID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_AgentAsync(string UserID) {
            return base.Channel.ByUserID_AgentAsync(UserID);
        }
        
        public System.Data.DataSet ByUserID_DirectInferior(string EmployeeID, string CompanyCode, string OU_CODE) {
            return base.Channel.ByUserID_DirectInferior(EmployeeID, CompanyCode, OU_CODE);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_DirectInferiorAsync(string EmployeeID, string CompanyCode, string OU_CODE) {
            return base.Channel.ByUserID_DirectInferiorAsync(EmployeeID, CompanyCode, OU_CODE);
        }
        
        public System.Data.DataSet ByUserID_Abnormal_Manager(string EmployeeID, string Level, string JobTitle, string UpStep) {
            return base.Channel.ByUserID_Abnormal_Manager(EmployeeID, Level, JobTitle, UpStep);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_Abnormal_ManagerAsync(string EmployeeID, string Level, string JobTitle, string UpStep) {
            return base.Channel.ByUserID_Abnormal_ManagerAsync(EmployeeID, Level, JobTitle, UpStep);
        }
        
        public System.Data.DataSet ByUserID_Abnormal_Manager_New(string EmployeeID, string Level, string JobTitle, string UpStep, string JobStep) {
            return base.Channel.ByUserID_Abnormal_Manager_New(EmployeeID, Level, JobTitle, UpStep, JobStep);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_Abnormal_Manager_NewAsync(string EmployeeID, string Level, string JobTitle, string UpStep, string JobStep) {
            return base.Channel.ByUserID_Abnormal_Manager_NewAsync(EmployeeID, Level, JobTitle, UpStep, JobStep);
        }
        
        public System.Data.DataSet ByUserID_Abnormal_Manager_SignerLevel(string EmployeeID, string Level, string UpStep, string JobStep) {
            return base.Channel.ByUserID_Abnormal_Manager_SignerLevel(EmployeeID, Level, UpStep, JobStep);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_Abnormal_Manager_SignerLevelAsync(string EmployeeID, string Level, string UpStep, string JobStep) {
            return base.Channel.ByUserID_Abnormal_Manager_SignerLevelAsync(EmployeeID, Level, UpStep, JobStep);
        }
        
        public System.Data.DataSet ByUserID_Abnormal_Manager_New1(string EmployeeID, string Level, string JobTitle, string UpStep, string JobStep) {
            return base.Channel.ByUserID_Abnormal_Manager_New1(EmployeeID, Level, JobTitle, UpStep, JobStep);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_Abnormal_Manager_New1Async(string EmployeeID, string Level, string JobTitle, string UpStep, string JobStep) {
            return base.Channel.ByUserID_Abnormal_Manager_New1Async(EmployeeID, Level, JobTitle, UpStep, JobStep);
        }
        
        public System.Data.DataSet ByUserID_SiteManager(string EmployeeID, string Level, string Trace) {
            return base.Channel.ByUserID_SiteManager(EmployeeID, Level, Trace);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_SiteManagerAsync(string EmployeeID, string Level, string Trace) {
            return base.Channel.ByUserID_SiteManagerAsync(EmployeeID, Level, Trace);
        }
        
        public System.Data.DataSet ByUserID_Site_Manager(string EmployeeID, string Level, string JobTitle, string UpStep) {
            return base.Channel.ByUserID_Site_Manager(EmployeeID, Level, JobTitle, UpStep);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_Site_ManagerAsync(string EmployeeID, string Level, string JobTitle, string UpStep) {
            return base.Channel.ByUserID_Site_ManagerAsync(EmployeeID, Level, JobTitle, UpStep);
        }
        
        public System.Data.DataSet ByUserID_Site_Manager_New(string EmployeeID, string Level, string JobTitle, string UpStep, string JobStep) {
            return base.Channel.ByUserID_Site_Manager_New(EmployeeID, Level, JobTitle, UpStep, JobStep);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_Site_Manager_NewAsync(string EmployeeID, string Level, string JobTitle, string UpStep, string JobStep) {
            return base.Channel.ByUserID_Site_Manager_NewAsync(EmployeeID, Level, JobTitle, UpStep, JobStep);
        }
        
        public System.Data.DataSet ByUserID_SiteGovern(string EmployeeID, string CompanyCode) {
            return base.Channel.ByUserID_SiteGovern(EmployeeID, CompanyCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_SiteGovernAsync(string EmployeeID, string CompanyCode) {
            return base.Channel.ByUserID_SiteGovernAsync(EmployeeID, CompanyCode);
        }
        
        public System.Data.DataSet ByUserID_SiteInferior(string EmployeeID, string CompanyCode, string OU_CODE) {
            return base.Channel.ByUserID_SiteInferior(EmployeeID, CompanyCode, OU_CODE);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_SiteInferiorAsync(string EmployeeID, string CompanyCode, string OU_CODE) {
            return base.Channel.ByUserID_SiteInferiorAsync(EmployeeID, CompanyCode, OU_CODE);
        }
        
        public System.Data.DataSet ByUserID_SiteDirectInferior(string EmployeeID, string CompanyCode, string OU_CODE) {
            return base.Channel.ByUserID_SiteDirectInferior(EmployeeID, CompanyCode, OU_CODE);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_SiteDirectInferiorAsync(string EmployeeID, string CompanyCode, string OU_CODE) {
            return base.Channel.ByUserID_SiteDirectInferiorAsync(EmployeeID, CompanyCode, OU_CODE);
        }
        
        public System.Data.DataSet ByUserID_FindSuperManager_bySite(string UserID, string SystemName) {
            return base.Channel.ByUserID_FindSuperManager_bySite(UserID, SystemName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserID_FindSuperManager_bySiteAsync(string UserID, string SystemName) {
            return base.Channel.ByUserID_FindSuperManager_bySiteAsync(UserID, SystemName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MESReport.ServiceReference1.UsersSearch_New11 MESReport.ServiceReference1.ElistQuerySoap.UsersSearch_New(MESReport.ServiceReference1.UsersSearch_New1 request) {
            return base.Channel.UsersSearch_New(request);
        }
        
        public System.Data.DataSet UsersSearch_New(string Key) {
            MESReport.ServiceReference1.UsersSearch_New1 inValue = new MESReport.ServiceReference1.UsersSearch_New1();
            inValue.Key = Key;
            MESReport.ServiceReference1.UsersSearch_New11 retVal = ((MESReport.ServiceReference1.ElistQuerySoap)(this)).UsersSearch_New(inValue);
            return retVal.UsersSearch_New1Result;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MESReport.ServiceReference1.UsersSearch_New11> MESReport.ServiceReference1.ElistQuerySoap.UsersSearch_NewAsync(MESReport.ServiceReference1.UsersSearch_New1 request) {
            return base.Channel.UsersSearch_NewAsync(request);
        }
        
        public System.Threading.Tasks.Task<MESReport.ServiceReference1.UsersSearch_New11> UsersSearch_NewAsync(string Key) {
            MESReport.ServiceReference1.UsersSearch_New1 inValue = new MESReport.ServiceReference1.UsersSearch_New1();
            inValue.Key = Key;
            return ((MESReport.ServiceReference1.ElistQuerySoap)(this)).UsersSearch_NewAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MESReport.ServiceReference1.UsersSearch_New21 MESReport.ServiceReference1.ElistQuerySoap.UsersSearch_New1(MESReport.ServiceReference1.UsersSearch_New2 request) {
            return base.Channel.UsersSearch_New1(request);
        }
        
        public System.Data.DataSet UsersSearch_New1(string Key, string Limit_OU_Code) {
            MESReport.ServiceReference1.UsersSearch_New2 inValue = new MESReport.ServiceReference1.UsersSearch_New2();
            inValue.Key = Key;
            inValue.Limit_OU_Code = Limit_OU_Code;
            MESReport.ServiceReference1.UsersSearch_New21 retVal = ((MESReport.ServiceReference1.ElistQuerySoap)(this)).UsersSearch_New1(inValue);
            return retVal.UsersSearch_New2Result;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MESReport.ServiceReference1.UsersSearch_New21> MESReport.ServiceReference1.ElistQuerySoap.UsersSearch_New1Async(MESReport.ServiceReference1.UsersSearch_New2 request) {
            return base.Channel.UsersSearch_New1Async(request);
        }
        
        public System.Threading.Tasks.Task<MESReport.ServiceReference1.UsersSearch_New21> UsersSearch_New1Async(string Key, string Limit_OU_Code) {
            MESReport.ServiceReference1.UsersSearch_New2 inValue = new MESReport.ServiceReference1.UsersSearch_New2();
            inValue.Key = Key;
            inValue.Limit_OU_Code = Limit_OU_Code;
            return ((MESReport.ServiceReference1.ElistQuerySoap)(this)).UsersSearch_New1Async(inValue);
        }
        
        public string WriteLog(string logDescription) {
            return base.Channel.WriteLog(logDescription);
        }
        
        public System.Threading.Tasks.Task<string> WriteLogAsync(string logDescription) {
            return base.Channel.WriteLogAsync(logDescription);
        }
    }
}
